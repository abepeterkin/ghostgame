<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canjump = false;
canmove = true;
enemy = 0;

xspeed = 0;
yspeed = 0;
xspawn = x;
yspawn = y;



health = PLAYER_HEALTH_MAX;

immune = false;
immuneTime = PLAYER_RECOVER_TIME * room_speed;

melee = instance_create(x, y, objMelee);
instance_deactivate_object(melee);

friction = 0.2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canmove = true;
enemy.hspeed = 2;
enemy.friction = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_deactivate_object(melee);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>immune = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.pause) {
    if(alarm[0] &gt; 0) {
        alarm[0]++;
    }
    if(alarm[1] &gt; 0) {
        alarm[1]++;
    }
    exit;
}

if(health &lt;= 0) {
    room_restart();
}

if(keyboard_check_pressed(vk_space)) {
    instance_activate_object(melee);
    alarm[1] = 5;
}

if(canmove)
xspeed = PLAYER_MOVESPEED * (keyboard_check(ord('D')) - keyboard_check(ord('A')));

if(xspeed &lt; 0) {
    image_xscale = -1;
} else if(xspeed &gt; 0) {
    image_xscale = 1;
}

if(place_meeting(x, y + 1, objFloor)) {
    if(keyboard_check_pressed(ord('W'))) {
        yspeed = -PLAYER_JUMPSPEED;
    }
} else {
    yspeed = min(TERMINAL_VELOCITY, yspeed + GRAVITY);
}

if(keyboard_check_released(ord('W')) &amp;&amp; yspeed &lt; 0) {
    yspeed *= 0.5;
}

if(place_meeting(x + xspeed, y, objFloor)) {
    while(!place_meeting(x + sign(xspeed), y, objFloor)) {
        x += sign(xspeed);
    }
    xspeed = 0;
}

if(place_meeting(x, y + yspeed, objFloor)) {
    while(!place_meeting(x, y + sign(yspeed), objFloor)) {
        y += sign(yspeed);
    }
    yspeed = 0;
}

if(place_meeting(x + xspeed, y + yspeed, objFloor)) {
    while(!place_meeting(x + sign(xspeed), y + sign(yspeed), objFloor)) {
        x += sign(xspeed);
        y += sign(yspeed);
    }
    xspeed = 0;
    yspeed = 0;
}
xspeed *=(1-friction);
x+=xspeed;
y+=yspeed;


melee.x = x + sprite_get_width(objPlayer) * 0.5 + sprite_get_width(objMelee) * 0.5;
melee.y = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemyGround">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if(canmove){
  enemy = other.id;
  other.friction = 0.2;
  if(sign(other.hspeed)!=(sign(xspeed))){
    xspeed = sign(other.hspeed)*2;
    other.hspeed = -xspeed;
    canmove = false;
    show_debug_message("Different sign");
  }
  else{

    if(x&lt;other.x){
        if(hspeed&lt;0){
        temp = xspeed;
        xspeed = other.hspeed*2;
        other.hspeed = -temp;
        canmove = false;
        show_debug_message("same sign");
        }
        else{
        temp = xspeed;
        xspeed = -other.hspeed*2;
        other.hspeed = temp;
        canmove = false;
        show_debug_message("same sign");
        }
    }
    else if(x&gt;other.x){
        if(hspeed&gt;0){
        temp = xspeed;
        xspeed = other.hspeed*2;
        other.hspeed = -temp;
        canmove = false;
        show_debug_message("same sign");
        }
        else{
        temp = xspeed;
        xspeed = -other.hspeed*2;
        other.hspeed = temp;
        canmove = false;
        show_debug_message("same sign");
        }
        }
    }
    alarm[2] = 10;
}
show_debug_message(other.hspeed);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!immune) {
    health -= other.damage;
    immune = true;
    alarm[0] = immuneTime;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_healthbar(10, 10, 110, 25, (health / PLAYER_HEALTH_MAX) * 100, c_black, c_red, c_green, 0, false, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
