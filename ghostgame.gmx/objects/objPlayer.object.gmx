<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canjump = false;
canmove = true;
enemy = 0;
enemyspeed = 0;
time  = 0;

xspeed = 0;
yspeed = 0;
xspawn = x;
yspawn = y;

still_image_index = 0;
walking_image_index_start = 1;
walking_image_index_end = 8;

imagestart = 0;
imageend = 1;
image_speed = 0.4;
health = PLAYER_HEALTH_MAX;

immune = false;
immuneTime = PLAYER_RECOVER_TIME * room_speed;

melee = instance_create(x, y, objMelee);
instance_deactivate_object(melee);

friction = 0.1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canmove = true;
//enemy.speed = 2;
//enemy.friction = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_deactivate_object(melee);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>immune = false;
image_blend = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.pause) {
    if(alarm[0] &gt; 0) {
        alarm[0]++;
    }
    if(alarm[1] &gt; 0) {
        alarm[1]++;
    }
    exit;
}

if (hspeed != 0) {
    imagestart = walking_image_index_start;
    imageend = walking_image_index_end ;
} else {
    imagestart = still_image_index;
    imageend = still_image_index + 1;
}

image_index = max(imagestart, image_index mod imageend);

if(health &lt;= 0) {
    room_restart();
}

if(keyboard_check_pressed(vk_space)) {
    instance_activate_object(melee);
    alarm[1] = 5;
}

ul = position_meeting(x - sprite_width / 2, y - sprite_width / 2, objEnemy);
ur = position_meeting(x + sprite_width / 2, y - sprite_width / 2, objEnemy);
ll = position_meeting(x - sprite_width / 2, y + sprite_width / 2, objEnemy);
lr = position_meeting(x + sprite_width / 2, y + sprite_width / 2, objEnemy);

if(!ul &amp;&amp; !ur &amp;&amp; !ll &amp;&amp; ! lr) {
    //canmove = true;
}

if(canmove) {
    hspeed = PLAYER_MOVESPEED * (keyboard_check(ord('D')) - keyboard_check(ord('A')));
    
    if(hspeed &lt; 0) {
    image_xscale = -1;
    } else if(hspeed &gt; 0) {
        image_xscale = 1;
    }
}


if(place_meeting(x, y + 1, objFloor)) {
    if(keyboard_check_pressed(ord('W'))) {
        vspeed = -PLAYER_JUMPSPEED;
    }
} else {
    vspeed = min(TERMINAL_VELOCITY, vspeed + GRAVITY);
}

if(keyboard_check_released(ord('W')) &amp;&amp; vspeed &lt; 0) {
    vspeed *= 0.5;
}

if(place_meeting(x + hspeed, y, objFloor)) {
    while(!place_meeting(x + sign(hspeed), y, objFloor)) {
        x += sign(hspeed);
    }
    hspeed = 0;
}

if(place_meeting(x, y + vspeed, objFloor)) {
    while(!place_meeting(x, y + sign(vspeed), objFloor)) {
        y += sign(vspeed);
    }
    vspeed = 0;
}

if(place_meeting(x + hspeed, y + vspeed, objFloor)) {
    while(!place_meeting(x + sign(hspeed), y + sign(vspeed), objFloor)) {
        x += sign(hspeed);
        y += sign(vspeed);
    }
    hspeed = 0;
    vspeed = 0;
}


melee.hspeed = hspeed;
melee.vspeed = vspeed;
melee.x = x + image_xscale * (sprite_get_width(objPlayer) * 0.5 + sprite_get_width(objMelee) * 0.5);
melee.y = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(!other.visible) exit;

if(!immune) {
    health -= other.damage;
    immune = true;
    alarm[0] = immuneTime;
}

if(canmove) {
    //temp = hspeed * 0.4;
    //hspeed = other.hspeed * 0.6;
    //other.hspeed = temp;
    canmove = false;
    //other.alarm[0] = room_speed * 3;
    alarm[2] = 20;
    
    if(x &gt; other.x) {
        hspeed = 4;
    } else {
        hspeed = -4;
    }
    vspeed = -10;
    image_blend = c_red;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemyFlying2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(!other.visible) exit;

if(!immune) {
    health -= other.damage;
    immune = true;
    alarm[0] = immuneTime;
}

if(canmove) {
    //temp = hspeed * 0.4;
    //hspeed = other.hspeed * 0.6;
    //other.hspeed = temp;
    canmove = false;
    //other.alarm[0] = room_speed * 3;
    alarm[2] = 20;
    
    if(x &gt; other.x) {
        hspeed = 4;
    } else {
        hspeed = -4;
    }
    vspeed = -10;
    image_blend = c_red;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemyFlying">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(!other.visible) exit;

if(!immune) {
    health -= other.damage;
    immune = true;
    alarm[0] = immuneTime;
}

if(canmove) {
    //temp = hspeed * 0.4;
    //hspeed = other.hspeed * 0.6;
    //other.hspeed = temp;
    canmove = false;
    //other.alarm[0] = room_speed * 3;
    alarm[2] = 20;
    
    if(x &gt; other.x) {
        hspeed = 4;
    } else {
        hspeed = -4;
    }
    vspeed = -10;
    image_blend = c_red;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemyBoss">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(!other.visible) exit;

if(!immune) {
    health -= other.damage;
    immune = true;
    alarm[0] = immuneTime;
}

if(canmove) {
    //temp = hspeed * 0.4;
    //hspeed = other.hspeed * 0.6;
    //other.hspeed = temp;
    canmove = false;
    //other.alarm[0] = room_speed * 3;
    alarm[2] = 20;
    
    if(x &gt; other.x) {
        hspeed = 4;
    } else {
        hspeed = -4;
    }
    vspeed = -10;
    image_blend = c_red;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemyGround">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(!other.visible) exit;

if(!immune) {
    health -= other.damage;
    immune = true;
    alarm[0] = immuneTime;
}

if(canmove) {
    //temp = hspeed * 0.4;
    //hspeed = other.hspeed * 0.6;
    //other.hspeed = temp;
    canmove = false;
    //other.alarm[0] = room_speed * 3;
    alarm[2] = 20;
    
    if(x &gt; other.x) {
        hspeed = 4;
    } else {
        hspeed = -4;
    }
    vspeed = -10;
    image_blend = c_red;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!immune) {
    health -= other.damage;
    immune = true;
    alarm[0] = immuneTime;
    image_blend = c_red;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_healthbar(10, 10, 110, 25, (health / PLAYER_HEALTH_MAX) * 100, c_black, c_red, c_green, 0, false, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
